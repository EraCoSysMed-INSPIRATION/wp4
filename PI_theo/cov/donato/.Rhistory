plot <- ggplot(data = df,aes(x,y)) + geom_point()
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(gam(y~s(x, bs = 'ps')))
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(gam(y~s(x, bs = 'ps')))
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(aes(gam(y~s(x, bs = 'ps'))))
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(aes(gam(y~s(x, bs = 'ps')), color = "red"))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(aes(gam(y~s(x, bs = 'ps'))))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_line(aes(gam(y~s(x, bs = 'ps'))))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_line(data = df, aes(gam(y~s(x, bs = 'ps'))))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point()
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(data = df, aes(gam(y~s(x, bs = 'ps'))))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth()
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(method="gam", formula = y~s(x, bs="cs"))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(method="gam", formula = y~s(x, bs="ps"))
plot
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(method="gam", formula = y~s(x, bs="GCV.Cp"))
plot
plot(x,y)
gam <- gam(df, formula = x~sy, bs="cs")
gam <- gam(df, formula = x~y, bs="cs")
gam <- gam(df, formula = x~s(y, bs="cs"))
gam <- gam(df, formula = x~s(y, bs="cr"))
gam <- gam(df, formula = x~s(y, bs="cr"))
gam <- gam(df, formula = y~s(x, bs="cr"))
gam <- gam(df, formula = y~s(x, bs='cr'))
gam <- gam(y~s(x, bs='cr'), data = df)
library(visreg)
install.packages("visreg")
library(visreg)
visreg(gam, "Sepal.Length", by="Species", scale="response", gg=T)
visreg(gam, "y", scale="response", gg=T)
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(mgcv::gam, formula = y~s(x, bs="GCV.Cp"))
plot <- ggplot(data = df,aes(x,y)) + geom_point() +
geom_smooth(aes(mgcv::gam(y~s(x, bs='cr')))
)
plot
gam <- gam(y~s(x, bs='cr'), data = df)
gam1 <- gam(y~s(x), data = df)
par(mfcol=c(1,2))
plot.gam(gam, residuals=F, se=T, shade=T, pch=16, cex=0.5)
plot.gam(gam1, residuals=F, se=T, shade=T, pch=16, cex=0.5)
par(mfcol=c(1,2))
plot.gam(gam, residuals=T, se=T, shade=T, pch=16, cex=0.5)
plot.gam(gam1, residuals=T, se=T, shade=T, pch=16, cex=0.5)
par(mfcol=c(1,2))
plot.gam(gam, residuals=T, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
plot.gam(gam1, residuals=T, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
par(mfcol=c(1,2))
plot.gam(gam, residuals=F, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
plot.gam(gam1, residuals=T, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
par(mfcol=c(1,2))
plot.gam(gam, residuals=F, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
plot.gam(gam1, residuals=F, se=T, shade=T, pch=16, cex=0.5, shade.col="red")
plot(x,y)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y)
plot(x,y)
plot(x,y)
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 1
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (x-knots[k])^l, 0))
bs
library(tidyr)
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(y ~ .-1, data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled
colnames(bsScaled) = c('int', paste0('X', 1:10))
bscoefs
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bsScaled = sweep(bs, 2, bscoefs,`*`)
colnames(bsScaled) = c('int', paste0('X', 1:10))
bsScaled
bscoefs
fit <- rowSums(bsScaled)
ggplot(d, aes(x,y)) + geom_point()
fit
ggplot(d, aes(x,y)) + geom_point()
+ geom_line(aes(d$x,fit))
ggplot(d, aes(x,y)) + geom_point() +
+ geom_line(aes(d$x,fit))
ggplot(d, aes(x,y)) + geom_point() +
geom_line(aes(d$x,fit))
ggplot(d, aes(x,y)) + geom_point() +
geom_line(aes(x,fit))
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled))
library(dplyr)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled))
bsScaled
ggplot(d, aes(x,y)) + geom_point() +
geom_line(bsScaled,aes(V1,fit))
bsScaled
ggplot(bsScaled,aes(V1,fit)) + geom_point()
ggplot(aes(x,bsScaled$fit)) + geom_point()
plot(x, bsScaled$fit )
plot(bsScaled$x, bsScaled$fit )
plot(bsScaled$x, bsScaled$fit )
bsScaled
plot(bsScaled$V1, bsScaled$fit )
plot(x, bsScaled$fit )
ggplot(d,aes(x,y)) + geom_point()
bscoefs
bscoefs[1]
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] )
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=x)
bsScaled = sweep(bs, 2, 1,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=x)
bsScaled
x
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(bsScaled,aes(x,fit))
bsScaled
ggplot(bsScaled,aes(x,fit)) + geom_point()
d = data.frame(x,y) %>% arrange(x)
plot(x,y)
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 1
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=x)
lmMod = lm(y ~ ., data=bs)
bscoefs = coef(lmMod)
bscoefs
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (x-knots[k])^l, 0)) %>% as.data.frame()
bs
lmMod = lm(y ~ .-1, data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=x)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=x)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=d$x)
ggplot(bsScaled,aes(x,fit)) + geom_point()
bsScaled
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) )
bsScaled
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y) %>% arrange(x)
plot(x,y)
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 1
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(y ~ .-1, data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=d$x)
bsScaled
ggplot(bsScaled,aes(x,fit)) + geom_point()
bsScaled
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs[-1]
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
bsScaled
bscoefs
bs
0.2875775201 * bscoefs[2]
bsScaled
ggplot(bsScaled,aes(fit,y)) + geom_point()
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(y=d$y)
ggplot(bsScaled,aes(fit,y)) + geom_point()
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
ggplot(bsScaled,aes(x,fit)) + geom_point()
bscoefs
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bs
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 1
bs = sapply(1:length(knots), function(k) ifelse(x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
bs
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
y = rnorm(500, mu, .3)
d = data.frame(x,y) %>% arrange(x)
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
bs
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
ggplot(bsScaled,aes(x,fit))
bsScaled
ggplot(bsScaled,aes(x,fit)) + geom_line()
ggplot(d,aes(x,y)) + geom_point() +
geom_line(bsScaled,aes(x,fit))
ggplot(d,aes(x,y)) + geom_point()
ggplot(d,aes(x,y)) + geom_point() +
geom_line(bsScaled,aes(x,fit))
bsScaled
ggplot(bsScaled,aes(x,fit)) + geom_line()
ggplot(d,aes(x,y)) + geom_point() +
ggplot(bsScaled,aes(x,fit)) + geom_line()
ggplot(d,aes(x,y)) + geom_point() +
geom_line(bsScaled$x,bsScaled$fit))
ggplot(d,aes(x,y)) + geom_point() +
geom_line(bsScaled$x,bsScaled$fit)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit))
lmMod = lm(y ~ .-1, data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs,`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled)  ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit))
bscoefs
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled)  ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit))
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
lmMod = lm(y ~ .-1, data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bscoefs
bsScaled = sweep(bs, 2, bscoefs|-1],`*`)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit))
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 3
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
colnames(bsScaled) = c('int', paste0('X', 1:10))
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
ggplot(d,aes(x,y)) + geom_point()
bscoefs
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
bscoefs
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] )
rowSums(bsScaled)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled))
bsScaled
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] )
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1] ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=d$x)
colnames(bsScaled) = c('int', paste0('X', 1:10))
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 3
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
bscoefs
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 3
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bsScaled[1]  ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
knots = seq(0, 1, by=.1)
knots = knots[-length(knots)]  # don't need the last value
l = 3
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0)) %>% as.data.frame()
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bsScaled[1]  ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
bsScaled
bsScaled[1]
lmMod = lm(d$y ~ ., data=bs)  # just a regression!
bscoefs = coef(lmMod)
bsScaled = sweep(bs, 2, bscoefs[-1],`*`)
bsScaled <- bsScaled %>% mutate(fit = rowSums(bsScaled) + bscoefs[1]  ) %>% mutate(x=d$x)
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red")
bsScaled
ggplot(d,aes(x,y)) + geom_point() +
geom_line(aes(bsScaled$x,bsScaled$fit), color = "red") +
geom_line(aes(bsScaled$x,bsScaled$V5), color = "blue")
xs = scale(d$x, scale=F)
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0))
xs
mean(g)
g <- c(5,8,10)
mean(g)
scale(g, scale = F)
scale(g, scale = F)
g/mean(g)
sd(g)
scale(g, scale = T)
mean(g)
scale(g, scale = F)
g-mean(g)
bs = sapply(1:length(knots), function(k) ifelse(d$x >= knots[k], (d$x-knots[k])^l, 0))
sm = smoothCon(s(x, bs='tr', k=14), data=d, knots=list(x=knots))[[1]]
sm = smoothCon(s(x, bs='tr', k=14), data=d, knots=list(x=knots))[[1]]
smoothCon(s(x, bs='tr', k=14), data=d, knots=list(x=knots))
install.packages("C:/Users/fr00688/Desktop/esqlabs_PI/esqlabsR_1.4.6.9013.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/fr00688/Desktop/esqlabs_PI/ospsuite.parameteridentification_1.1.0.zip", repos = NULL, type = "win.binary")
library(ospsuite.parameteridentification)
library(esqlabsR)
install.packages("C:/Users/fr00688/Desktop/esqlabs_PI/ospsuite_10.0.0.zip", repos = NULL, type = "win.binary")
library(ospsuite.parameteridentification)
remove.packages("ospsuite", lib="~/R/R-3.6.3/library")
install.packages("C:/Users/fr00688/Desktop/esqlabs_PI/ospsuite_10.0.0.zip", repos = NULL, type = "win.binary")
library(ggplot2)
set.seed(10)
n = 250
x = runif(n,0,5)
y_model = 3*x/(1+2*x)
y_obs = rnorm(n,y_model,0.1)
data_plot = qplot(x, y_obs) +
geom_line(aes(y=y_model)) +
theme_bw()
print(data_plot)
library(ggplot2)
set.seed(10)
n = 250
x = runif(n,0,5)
y_model = 3*x/(1+2*x)
y_obs = rnorm(n,y_model,0.1)
data_plot = qplot(x, y_obs) +
geom_line(aes(y=y_model)) +
theme_bw()
print(data_plot)
data_plot = qplot(x, y_obs) +
geom_line(aes(y=y_model)) +
theme_bw()
data_plot
install.packages("digest")
library(ggplot2)
set.seed(10)
n = 250
x = runif(n,0,5)
y_model = 3*x/(1+2*x)
y_obs = rnorm(n,y_model,0.1)
data_plot = qplot(x, y_obs) +
geom_line(aes(y=y_model)) +
theme_bw()
print(data_plot)
print(data_plot)
x
library(mgcv)
linear_model = gam(y_obs~x)
model_summary=summary(linear_model)
print(model_summary)
data_plot = data_plot+
geom_line(colour="red",
aes(y=fitted(linear_model)))
print(data_plot)
gam_model = gam(y_obs~s(x))
summary(gam_model)
data_plot = data_plot +
geom_line(colour="blue",aes(y=fitted(gam_model)))
print(data_plot)
plot(gam_model)
n <- 250
x_test <- runif(n,-5,5)
y_test_fit <- 4*dnorm(x_test)
y_test_obs <- rnorm(n,y_test_fit, 0.2)
data_plot <- qplot(x_test, y_test_obs) +
geom_line(aes(y=y_test_fit))+
theme_bw()
print(data_plot)
linear_model_test <- gam(y_test_obs~x_test)
nested_gam_model_test <- gam(y_test_obs~s(x_test)+x_test)
print(anova(linear_model_test, nested_gam_model_test, test="Chisq"))
summary(nested_gam_model_test)$s.table
gam_data = gamSim(eg=5)
head(gam_data)
basic_model = gam(y~x0+s(x1), data= gam_data)
basic_summary = summary(basic_model)
print(basic_summary$p.table)
print(basic_summary$s.table)
plot(basic_model)
print(basic_summary$p.table)
basic_summary
basic_summary
basic_model
print(basic_summary$p.table)
print(basic_summary$s.table)
two_term_model <- gam(y~x0+s(x1)+x2, data=gam_data)
two_term_summary <- summary(two_term_model)
print(two_term_summary$p.table)
print(two_term_summary$s.table)
two_smooth_model <- gam(y~x0+s(x1)+s(x2), data=gam_data)
two_smooth_summary <- summary(two_smooth_model)
print(two_smooth_summary$p.table)
print(two_smooth_summary$s.table)
plot(two_smooth_model,page=1)
head(gam_data)
three_term_model <- gam(y~x0+s(x1)+s(x2)+x3, data=gam_data)
three_smooth_model <- gam(y~x0+s(x1)+s(x2)+s(x3), data=gam_data)
three_smooth_summary <- summary(three_smooth_model)
print(three_smooth_summary$p.table)
print(three_smooth_summary$s.table)
plot(three_smooth_model,page=1)
anova(two_smooth_model,three_term_model,test="Chisq")
categorical_interact <- gam(y~x0+s(x1)+s(x2,by=x0),data=gam_data)
categorical_interact_summary <- summary(categorical_interact)
print(categorical_interact_summary$s.table)
plot(categorical_interact,page=1)
(
head(gam_data)
head(gam_data)
gam_data = gamSim(eg=5)
head(gam_data)
anova(two_smooth_model, categorical_interact,test="Chisq")
smooth_interact <- gam(y~x0+s(x1,x2),data=gam_data)
smooth_interact_summary <- summary(smooth_interact)
print(smooth_interact_summary$s.table)
plot(smooth_interact,page=1,scheme=3)
# plot(smooth_interact,page=1,scheme=1) donne un graphique comparable à vis.gam()
vis.gam(smooth_interact,view=c("x1","x2"),theta=40,n.grid=500,border=NA)
anova(two_smooth_model,smooth_interact,test="Chisq")
data(nottem)
n_years <- length(nottem)/12
nottem_month <- rep(1:12, times=n_years)
nottem_year <- rep(1920:(1920+n_years-1),each=12)
nottem_plot <- qplot(nottem_month,nottem,
colour=factor(nottem_year),
geom="line") + theme_bw()
print(nottem_plot)
nottem_year
year_gam <- gam(nottem~s(nottem_year)+s(nottem_month, bs="cc"))
summary(year_gam)$s.table
plot(year_gam,page=1, scale=0)
par(mfrow=c(1,2))
acf(resid(year_gam), lag.max = 36, main = "ACF")
pacf(resid(year_gam), lag.max = 36, main = "pACF")
remotes::install_github("Open-Systems-Pharmacology/OSPSuite-R")
library(ospsuite)
detach("package:ospsuite", unload = TRUE)
remove.packages("ospsuite")
install.packages("C:/Users/fr00688/R/pksim_new/OSPSuite.Core-9.0.138.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/fr00688/R/pksim_new/ospsuite_9.1.4.zip", repos = NULL, type = "win.binary")
setwd("C:/Users/fr00688/R/pksim_new/PI_theo/cov/donato")
library(ospsuite)
library(dplyr)
library(progress)
